name: Manage Dev Environment

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply/destroy)'
        required: true
        type: choice
        options:
          - apply
          - destroy
      task_name:
        description: 'Name of the ECS task (only for ecs-task stack)'
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.4'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.DEV_AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: eu-west-2

      - name: Terraform Init
        working-directory: infrastructure/stacks/ecs-task
        run: terraform init

      - name: extract name from branch
        id: extract
        run: |
          BRANCH="${GITHUB_REF##*/}" # Get full ref name
          PART="${BRANCH#feature/}" # remove the `feature/` from the begining
          SHORTCODE="${PART%%-*}"
          echo "ticket_number=$TICKET" >> "$GITHUB_OUTPUT"
          echo "shortcode"="$SHORTCODE" >> "$GITHUB_OUTPUT"

      - name: Check values are correct
        run: |
          echo "Ticket: ${{ steps.extract.outputs.ticket_number}}"
          echo "Shortcode: ${{ steps.extract.outputs.shortcode}}"
          echo "correct syntax should be ${{ steps.extract.outputs.ticket_bumber}}-${{steps.extract.outputs.shortcode}}"

      - name: Check current workspace
        working-directory: infrastructure/stacks/ecs-task
        run: |
          terraform workspace new ${{ github.event.inputs.task_name }} || true
          terraform workspace list && terraform workspace select ${{ github.event.inputs.task_name }}

      - name: Terraform ${{ github.event.inputs.action }}
        working-directory: infrastructure/stacks/ecs-task
        env:
          TF_ACTION: ${{ github.event.inputs.action }}
          TF_STACK: ecs-task
          TF_VAR_aws_account_id: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
          TF_VAR_task_name: ${{ github.event.inputs.task_name }}
        run: |
          echo "$TF_VAR_task_name"
          terraform ${{ github.event.inputs.action }} -auto-approve -var-file="../../environments/cicd/main.tfvars"

      - name: Cleanup
        working-directory: infrastructure/stacks/ecs-task
        env:
          TF_ACTION: ${{ github.event.inputs.action }}
        run: |
          if ["$TF_ACTION" = "destroy"];then
            terraform workspace delete -force ${{ github.event.inputs.task_name }}
          fi

