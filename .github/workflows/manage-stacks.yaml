name: Manage Stacks

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply/destroy)'
        required: true
        type: choice
        options:
          - apply
          - destroy
      stack:
        description: 'Which stack to manage'
        required: true
        type: choice
        options:
          - vpc
          - eks
          - eks-resources
          - rds
          - elasticache
          - ecs-cluster
          - ecr
      environment:
        description: 'Terraform environment to use'
        required: true
        type: choice
        options:
          - cicd
          - nft
          - uat
          - prod
          # Add new environments here

permissions:
  id-token: write
  contents: read

env:
  CLUSTER_NAME: nhse-bss-euwest2-cicd-eks
  AWS_REGION: eu-west-2

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: print variables
        run: |
          echo "action = ${{ github.event.inputs.action }}"
          echo "stack = ${{ github.event.inputs.stack }}"
          echo "environment = ${{ github.event.inputs.environment }}"
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.4'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.DEV_AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: eu-west-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Terraform Init
        working-directory: infrastructure/stacks/${{ github.event.inputs.stack }}
        run: terraform init

      - name: Terraform ${{ github.event.inputs.action }}
        working-directory: infrastructure/stacks/${{ github.event.inputs.stack }}
        env:
          TF_VAR_ENVIRONMENT: ${{ github.event.inputs.environment }}
          TF_ACTION: ${{ github.event.inputs.action }}
          TF_STACK: ${{ github.event.inputs.stack }}
          TF_VAR_aws_account_id: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
        run: terraform ${{ github.event.inputs.action }} -auto-approve -var-file="../../environments/$TF_VAR_ENVIRONMENT/main.tfvars"


  eks-resources:
    needs: terraform
    if: (github.events.inputs.action == "apply" && github.event.inputs.stack == "eks" )
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.4'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.DEV_AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: eu-west-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Terraform Init
        working-directory: infrastructure/stacks/eks-resources
        run: terraform init

      - name: Terraform ${{ github.event.inputs.action }}
        working-directory: infrastructure/stacks/eks-resources
        env:
          TF_VAR_ENVIRONMENT: ${{ github.event.inputs.environment }}
          TF_ACTION: ${{ github.event.inputs.action }}
          TF_STACK: "EKS-RESOURCES"
          TF_VAR_aws_account_id: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
        run: terraform ${{ github.event.inputs.action }} -auto-approve -var-file="../../environments/$TF_VAR_ENVIRONMENT/main.tfvars"

